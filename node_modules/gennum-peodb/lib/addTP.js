//============================================================================//

var print = console.log;

var peodbUtils = require('../peodbUtils');

//============================================================================//

module.exports = function(PEODB) {

  var requiredArgs = [
    'user_id',
    'tp_set_id',
    'tp_type_id',
    'ate_type_id',
    'name',
  ];

  PEODB.prototype.addTP = function(args, cb) {
    var peodb = this;

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }

    peodb.checkTPsetRole(args, 'TE', function(err) {
      if (err) {
        return cb(err);
      }
      peodb.dbSession(args,
        function(db, cb) {
          addTP(peodb, db, args, cb);
        },
        function(err, tp_id) {
          if (!err) {
            peodb.triggerEmails();
          }
          return cb(err, tp_id);
        }
      );
    });
  }

  function addTP(peodb, db, args, cb) {
    db.transaction(function(cb) {
      findPartflowID(db, args, function(err, partflow_id) {
        if (err) {
          return cb(err);
        }
        peodbUtils.createStep(db, 'TP', args.user_id, function(err, step_id) {
          if (err) {
            return cb(err);
          }
          var qStr =
            'INSERT INTO tps ('
          + '  tp_id, tp_set_id, step_id'
          + ', tp_type_id, ate_type_id, name, create_user_id, create_time'
          + ') VALUES ('
          + 'NULL'
          + ',' + db.escape(args.tp_set_id)
          + ',' + db.escape(step_id)
          + ',' + db.escape(args.tp_type_id)
          + ',' + db.escape(args.ate_type_id)
          + ',' + db.escape(args.name)
          + ',' + db.escape(args.user_id)
          + ',UNIX_TIMESTAMP()'
          + ')'
          ;
          db.queryData(qStr, function(err, data) {
            if (err) {
              return cb(err);
            }
            var tp_id = data.insertId;

            var qStr =
              'INSERT INTO partflow_steps'
            + ' (partflow_id, step_id)'
            + ' VALUES (' + partflow_id + ',' + step_id + ')'
            ;
            db.queryData(qStr, function(err, data) {
              var copyArgs = { db: db,
                user_id:   args.user_id,
                tp_set_id: args.tp_set_id,
                tp_id:     tp_id
              };
              peodb.copyRolesTPset2TP(copyArgs, function(err) {
                if (err) {
                  return cb(err);
                }
                return cb(null, tp_id);
              });
            });
          });
        });
      });
    },
    cb);
  }

  function findPartflowID(db, args, cb) {
    var qStr =
      'SELECT'
    + '    partflow_id'
    + '  FROM'
    + '    tp_sets'
    + '  WHERE'
    + '    tp_set_id = ' + db.escape(args.tp_set_id)
    ;
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }
      if (data.rows.length !== 1) {
        return cb(Error('TPset could not be found for the TP'));
      }
      return cb(null, data.rows[0][0]);
    });
  }
}

//============================================================================//
