//============================================================================//

var print = console.log;

var async = require('async');

var checkArgs = require('../peodbUtils').checkArgs;

//============================================================================//
//
//  hardbins = [
//    hbin_num: <number>,
//    name:     <string> | null,
//    good_bin: <boolean>,
//  ]
//
//  softbins = [
//    sbin_num: <number>,
//    hbin_num: <number> | null,
//    name:     <string> | null,
//    good_bin: <boolean>,
//  ]
//
//============================================================================//

module.exports = function(PEODB) {

  var requiredArgs = [
    'db',
    'tp_rev_id',
    'hardbins', // an array of objects
    'softbins', // an array of objects
  ];

  var hardbinRequiredArgs = [
    'hbin_num',
    'name',
    'good_bin',
  ];

  var softbinRequiredArgs = [
    'sbin_num',
    'hbin_num',
    'name',
    'good_bin',
  ];

  //==========================================================================//

  PEODB.prototype.addTPrevBins = function(args, cb) {
    var peodb = this;

    var missingArg = checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing  argument: ' + missingArg));
    }

    var db = args.db;

    validateBins(args, function(err) {
      if (err) {
        return cb(err);
      }
      addHardBins(db, args, function(err, hardbinMap) {
        if (err) {
          return cb(err);
        }
        addSoftBins(db, args, hardbinMap, cb);
      });
    });
  }

  //==========================================================================//

  function validateBins(args, cb) {
    var hardbins = args.hardbins;
    for (var i = 0; i < hardbins.length; i++) {
      var hardbin = hardbins[i];
      missingArg = checkArgs(hardbinRequiredArgs, hardbin);
      if (missingArg) {
        return cb(Error('missing hardbin argument: ' + missingArg));
      }
    }
    var softbins = args.softbins;
    for (var i = 0; i < softbins.length; i++) {
      var softbin = softbins[i];
      missingArg = checkArgs(softbinRequiredArgs, softbin);
      if (missingArg) {
        return cb(Error('missing softbin argument: ' + missingArg));
      }
    }
    return cb();
  }

  //==========================================================================//

  function addHardBins(db, args, cb) {
    var hardbins  = args.hardbins;
    var tp_rev_id = args.tp_rev_id;
    var hardbinMap = {};
    async.forEachSeries(hardbins,
      function(hardbin, cb) {
        addHardBin(db, tp_rev_id, hardbin, function(err, hardbin_id) {
          if (err) { return cb(err); }
          hardbinMap[hardbin.hbin_num] = hardbin_id;
          return cb();
        });
      },
      function(err) {
        if (err) { return cb(err); }
        return cb(null, hardbinMap);
      }
    );
  }

  //==========================================================================//

  function addHardBin(db, tp_rev_id, hardbin, cb) {
    var qStr =
      'INSERT INTO hardbins'
    + ' (hardbin_id'
    + ', tp_rev_id'
    + ', hbin_num'
    + ', name'
    + ', good_bin'
    + ', step_output_id'
    + ', hold_min_percent'
    + ', hold_max_percent'
    + ') VALUES'
    + ' (NULL' // hardbin_id
    + ',' + db.escape(tp_rev_id)
    + ',' + db.escape(hardbin.hbin_num)
    + ',' + db.escape(hardbin.name)
    + ',' + db.escape(hardbin.good_bin)
    + ', NULL' // step_output_id
    + ', NULL' // hold_min_percent
    + ', NULL' // hold_max_percent
    + ')'
    ;
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }
      return cb(null, data.insertId);
    });
  }

  //==========================================================================//

  function addSoftBins(db, args, hardbinMap, cb) {
    var softbins  = args.softbins;
    var tp_rev_id = args.tp_rev_id;
    async.forEachSeries(softbins,
      function(softbin, cb) {
        addSoftBin(db, tp_rev_id, softbin, hardbinMap, cb);
      },
    cb);
  }

  function addSoftBin(db, tp_rev_id, softbin, hardbinMap, cb) {
    var hardbin_id = hardbinMap[softbin.hbin_num];
    var qStr =
      'INSERT INTO softbins'
    + ' (softbin_id'
    + ', hardbin_id'
    + ', tp_rev_id'
    + ', sbin_num'
    + ', name'
    + ', good_bin'
    + ') VALUES'
    + ' (NULL' // softbin_id
    + ',' + db.escape(hardbin_id)
    + ',' + db.escape(tp_rev_id)
    + ',' + db.escape(softbin.sbin_num)
    + ',' + db.escape(softbin.name)
    + ',' + db.escape(softbin.good_bin)
    + ')'
    ;
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }
      return cb(null, data.insertId);
    });
  }

  //==========================================================================//

}

//============================================================================//
