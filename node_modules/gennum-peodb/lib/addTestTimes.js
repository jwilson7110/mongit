//============================================================================//

var print = console.log;

var async = require('async');

//============================================================================//

module.exports = function(PEODB) {

  var requiredArgs = [
    'db',
    'tp_rev_id',
    'total_avg',
    'suites',
    'source', // 'internal' | 'external'
    //'blob_id',
    //'datalog_id',
  ];

  //==========================================================================//

  PEODB.prototype.addTestTimes = function(args, cb) {
    var peodb = this;

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing  argument: ' + missingArg));
    }

    if ((args.source !== 'internal') && (args.source !== 'external')) {
      return cb(Error('invalid test times source: ' + args.source));
    }

    var haveBlob = typeof(args.blob_id)    !== 'undefined';
    var haveDLog = typeof(args.datalog_id) !== 'undefined';
    if (!haveBlob && !haveDLog) {
      return cb(Error('missing argument: blob_id or datalog_id'));
    }
    if (!haveBlob) { args.blob_id    = null; }
    if (!haveDLog) { args.datalog_id = null; }

    peodb.dbSession(args, function(db, cb) {
      addTestTimes(db, args, cb);
    }, cb);
  }

  function addTestTimes(db, args, cb) {
    setTPrevTestTime(db, args, function(err) {
      if (err) {
        return cb(err);
      }
      async.forEachSeries(args.suites,
        function(suite, cb) {
          addSuiteTestTimes(db, args, suite, cb);
        },
      cb);
    });
  }

  function setTPrevTestTime(db, args, cb) {
    var qStr =
      'UPDATE tp_revs'
    + ' SET avg_test_time = ' + db.escape(args.total_avg)
    + ' WHERE tp_rev_id = '   + db.escape(args.tp_rev_id)
    ;
    db.queryData(qStr, cb);
  }

  function addSuiteTestTimes(db, args, suite, cb) {
    if (suite.total_time === null) { // FIXME ?
      return cb();
    }
    var test_suite = db.escape(suite.name);
    var datalog_id = db.escape(args.datalog_id);
    var qStr =
      'INSERT INTO test_times'
    + ' (test_time_id, blob_id, datalog_id, test_suite, part_count, duration)'
    + ' VALUES'
    + ' (NULL' // test_flag_id
    + ',' + db.escape(args.blob_id)
    + ',' + db.escape(args.datalog_id)
    + ',' + db.escape(suite.name)
    + ',' + db.escape(suite.count)
    + ',' + db.escape(suite.total_time)
    + ')'
    ;
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }

      var test_time_id = data.insertId;

      async.forEachSeries([ 'TOTAL', 'SETUP', 'EXECUTE' ],
        function(timeType, cb) {
          if (!suite.types[timeType]) {
            return cb();
          }
          async.forEachSeries([ 'SUM', 'MIN', 'MAX', 'AVG' ],
            function(calcType, cb) {
              var result = suite.types[timeType];
              if (result[calcType] === 'null') { // FIXME ?
                return cb();
              }
              var qStr =
                'INSERT INTO test_time_entries'
              + ' (test_time_entry_id, test_time_id'
              + ', time_type, time_calc, duration)'
              + ' VALUES'
              + ' (NULL' // test_time_entry
              + ',' + db.escape(test_time_id)
              + ',' + db.escape(timeType)
              + ',' + db.escape(calcType)
              + ',' + db.escape(result[calcType])
              + ')'
              ;
              db.queryData(qStr, cb);
            },
          cb);
        },
      cb);
    });
  }
}

//============================================================================//
