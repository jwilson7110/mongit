//============================================================================//

var print = console.log;

//============================================================================//

module.exports = function(PEODB) {

  var requiredArgs = [
    'user_id',
    'user_agent',
    'host',
    'url',
    'method',
    'client_ip',
    // 'post_data', -- optional, can also be socket.io JSON data
  ];

  PEODB.prototype.addURLView = function(args, cb) {
    var peodb = this;

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }

    // put the `post_data` into a useable format
    if ((args.post_data === null) || (typeof(args.post_data) === 'undefined')) {
      args.post_data = 'NULL'; // SQL NULL
    }
    else if ((typeof(args.post_data) === 'number') ||
             (typeof(args.post_data) === 'string')) {
      args.post_data = peodb.escape(args.post_data);
    }
    else {
      args.post_data = peodb.escape(JSON.stringify(args.post_data));
    }

    peodb.dbSession(args, function(db, cb) {
      addURLView(db, args, cb);
    }, cb);
  }

  function addURLView(db, args, cb) {
    db.transaction(function(cb) {
      getURLID(db, args, function(err, url_id) {
        if (err) {
          return cb(err);
        }
        getAgentID(db, args, function(err, url_agent_id) {
          if (err) {
            return cb(err);
          }
          var qStr = 'INSERT INTO url_views'
          + ' (url_view_id, url_id, url_agent_id, user_id,'
          + '  access_time, leave_time, post_data, client_ip) VALUES'
          + ' (NULL,' + db.escape(url_id)
          + ',' + db.escape(url_agent_id)
          + ',' + db.escape(args.user_id)
          + ', UNIX_TIMESTAMP()' // access_time
          + ', NULL'             // leave_time
          + ',' + args.post_data
          + ',' + db.escape(args.client_ip)
          + ')';
          db.queryData(qStr, function(err, data) {
            if (err) {
              return cb(err);
            }
            return cb(null, data.insertId);
          });
        });
      });
    },
    cb);
  }

  function getURLID(db, args, cb) {
    var host   = db.escape(args.host);
    var url    = db.escape(args.url);
    var method = db.escape(args.method);
    var qStr =
      'SELECT url_id FROM urls'
      + ' WHERE host   = ' + host
      + '   AND url    = ' + url
      + '   AND method = ' + method;
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }
      if (data.rows.length === 1) {
        return cb(null, data.rows[0].url_id);
      }
      var qStr = 'INSERT INTO urls (url_id, host, url, method) VALUES'
               + ' (NULL,' + host + ',' + url + ',' + method + ')';
      db.queryData(qStr, function(err, data) {
        if (err) {
          return (err);
        }
        return cb(null, data.insertId);
      });
    });
  }

  function getAgentID(db, args, cb) {
    var agent = db.escape(args.user_agent);
    var qStr =
      'SELECT url_agent_id FROM url_agents WHERE user_agent = ' + agent;
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }
      if (data.rows.length === 1) {
        return cb(null, data.rows[0].url_agent_id);
      }
      var qStr = 'INSERT INTO url_agents (url_agent_id, user_agent) VALUES'
               + ' (NULL,' + agent + ')';
      db.queryData(qStr, function(err, data) {
        if (err) {
          return (err);
        }
        return cb(null, data.insertId);
      });
    });
  }
}

//============================================================================//
