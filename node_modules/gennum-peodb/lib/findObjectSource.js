//============================================================================//

var print = console.log;

var peodbUtils = require('../peodbUtils');

//============================================================================//

var queryBasis =
  'SELECT'
+ '    o.object_id'
+ '  , ot.name AS obj_type'
+ '  , fp.fab_process_id  AS fab_process_id'
+ '  , fp.brief           AS fab_process_brief'
+ '  , pf.partflow_id     AS partflow_id'
+ '  , pf.name            AS partflow_name'
+ '  , p.part_id          AS part_id'
+ '  , p.part_number      AS part_name'
+ '  , s.step_id          AS step_id'
+ '  , st.step_abbr       AS step_type'
+ '  , ts.tp_set_id       AS tp_set_id'
+ '  , ts.name            AS tp_set_name'
+ '  , tp.tp_id           AS tp_id'
+ '  , tp.name            AS tp_name'
+ '  , tr.tp_rev_id       AS tp_rev_id'
+ '  , tr.name            AS tp_rev_name'
+ ' FROM objects o'
+ '  JOIN object_types ot ON (ot.object_type_id = o.object_type_id)'
+ '  LEFT JOIN fab_processes fp ON (fp.object_id = o.object_id)'
+ '  LEFT JOIN partflows     pf ON (pf.object_id = o.object_id)'
+ '  LEFT JOIN parts         p  ON (p.object_id = o.object_id)'
+ '  LEFT JOIN steps         s  ON (s.object_id = o.object_id)'
+ '  LEFT JOIN step_types    st ON (st.step_type_id = s.step_type_id)'
+ '  LEFT JOIN tp_sets       ts ON (ts.step_id = s.step_id)'
+ '  LEFT JOIN tps           tp ON (tp.step_id = s.step_id)'
+ '  LEFT JOIN tp_revs       tr ON (tr.step_id = s.step_id)'
+ ' WHERE o.object_id = '
;

//============================================================================//

module.exports = function(PEODB) {

  var requiredArgs = [
    'object_id',
  ];

  PEODB.prototype.findObjectSource = function(args, cb) {
    var peodb = this;

    if (!(args instanceof Object)) {
      args = { object_id: args };
    }

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }

    var db = args.db || peodb.sharedDB;

    var qStr = queryBasis + db.escape(args.object_id);

    db.query1Row(qStr, function(err, row) {
      if (err) {
        return cb(err);
      }
      var info = row.toMap(true); // noNulls

      info.source_type = info.obj_type;
      if (info.obj_type === 'step') {
        if (info.tp_set_id) { info.source_type = 'tp_set'; }
        if (info.tp_id)     { info.source_type = 'tp';     }
        if (info.tp_rev_id) { info.source_type = 'tp_rev'; }
      }

      info.source_id = info[info.source_type + '_id'];

      switch (info.source_type) {
        case 'fab_process': {
          info.source_name = info.fab_process_brief;
          break;
        }
        case 'step': {
          info.source_name = info.step_id;
          break;
        }
        default: {
          info.source_name = info[info.source_type + '_name'];
        }
      }

      return cb(null, info);
    });
  }
}

//============================================================================//
