//============================================================================//

var print = console.log;

//============================================================================//

var queryBasis =
  'SELECT'
  + '     s.step_id'
  + '   , s.object_id'
  + '   , s.state'
  + '   , st.step_type_id  AS step_type_id'
  + '   , st.step_abbr     AS step_type_abbr'
  + '   , st.step_name     AS step_type_name'
  + '   , ts.tp_set_id     AS tp_set_id'
  + '   , ts.name          AS tp_set_name'
  + '   , tp.tp_id         AS tp_id'
  + '   , tp.name          AS tp_name'
  + '   , tr.tp_rev_id     AS tp_rev_id'
  + '   , tr.name          AS tp_rev_name'
  + ' FROM'
  + '   steps s'
  + '        JOIN step_types st ON (st.step_type_id = s.step_type_id)'
  + '   LEFT JOIN tp_sets    ts ON (ts.step_id = s.step_id)'
  + '   LEFT JOIN tps        tp ON (tp.step_id = s.step_id)'
  + '   LEFT JOIN tp_revs    tr ON (tr.step_id = s.step_id)'
  ;


module.exports = function(PEODB) {

  var requiredArgs = [
    'step_id',
  ];

  PEODB.prototype.getStepInfo = function(args, cb) {
    var peodb = this;

    if (!(args instanceof Object)) {
      args = { step_id: args };
    }

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }

    getStepInfo(peodb.sharedDB, args, cb);
  }

  function getStepInfo(db, args, cb) {
    var qStr =
      queryBasis
      + ' WHERE'
      + '   s.step_id = ' + db.escape(args.step_id)
      ;
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }
      if (data.rows.length !== 1) {
        return cb(err, 'invalid number of matching steps: ' + data.rows.length);
      }
      return cb(err, data.rows[0].toMap());
    });
  }
}

//============================================================================//
