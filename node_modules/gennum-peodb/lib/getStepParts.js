//============================================================================//

var print = console.log;

var async = require('async');

//============================================================================//

var querySelect =
  'SELECT'
  + '     s.step_id        AS step_id'
  + '   , p.part_id        AS part_id'
  + '   , p.part_number    AS part_number'
  + '   , p.description    AS description'
  + '   , p.state          AS state'
  + '   , pt.part_type_id  AS part_type_id'
  + '   , pt.name          AS part_type_name'
  + '   , pt.abbr          AS part_type_abbr'
  + '   , pt.primary_type  AS part_type_primary'
  ;

var queryFromInput =
    ' FROM'
  + '   steps             s'
  + '   JOIN part_outputs po  ON (po.step_id      = s.step_id)'
  + '   JOIN parts        p   ON (p.part_id       = po.part_id)'
  + '   JOIN part_types   pt  ON (pt.part_type_id = p.part_type_id)'
  ;

var queryFromOutput =
    ' FROM'
  + '   steps              s'
  + '   JOIN step_outputs  so  ON (so.step_id      = s.step_id)'
  + '   JOIN parts         p   ON (p.part_id       = so.part_id)'
  + '   JOIN part_types    pt  ON (pt.part_type_id = p.part_type_id)'
  ;

//============================================================================//

module.exports = function(PEODB) {

  var requiredArgs = [
    'step_id',
  ];

  //==========================================================================//

  PEODB.prototype.getPartOutputs = function(args, cb) {
    var peodb = this;
    if (!(args instanceof Object)) {
      args = { step_id: args };
    }
    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }
    getPartOutputs(peodb.sharedDB, args, cb);
  }

  PEODB.prototype.getStepOutputs = function(args, cb) {
    var peodb = this;
    if (!(args instanceof Object)) {
      args = { step_id: args };
    }
    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }
    getStepOutputs(peodb.sharedDB, args, cb);
  }

  PEODB.prototype.getStepParts = function(args, cb) {
    var peodb = this;
    if (!(args instanceof Object)) {
      args = { step_id: args };
    }
    peodb.dbSession(args, function(db, cb) {
      getStepParts(db, args, cb);
    }, cb);
  }

  //==========================================================================//

  function getPartOutputs(db, args, cb) {
    var qStr = '';
    qStr += querySelect;
    qStr += queryFromInput;
    qStr += ' WHERE s.step_id = ' + db.escape(args.step_id);
    db.queryData(qStr, cb);
  }

  function getStepOutputs(db, args, cb) {
    var qStr = '';
    qStr += querySelect;
    qStr += queryFromOutput;
    qStr += ' WHERE s.step_id = ' + db.escape(args.step_id);
    db.queryData(qStr, cb);
  }

  function getStepParts(db, args, cb) {
    async.parallel({
      inputs:  function(cb) { getPartOutputs(db, args, cb); },
      outputs: function(cb) { getStepOutputs(db, args, cb); },
    },
    cb);
  }
}

//============================================================================//
