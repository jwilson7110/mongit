//============================================================================//

var print = console.log;

//============================================================================//

var sbinBasis =
  'SELECT'
  + '     tr.tp_rev_id'
  + '   , sb.softbin_id'
  + '   , sb.hardbin_id'
  + '   , sb.sbin_num'
  + '   , sb.name'
  + '   , sb.good_bin'
  + '   , hb.hbin_num'
  + '   , hb.good_bin AS hbin_good_bin' // redundant, hopefully
  + ' FROM'
  + '   tp_revs             tr'
  + '   JOIN softbins       sb  ON (sb.tp_rev_id = tr.tp_rev_id)'
  + '   LEFT JOIN hardbins  hb  ON (hb.hardbin_id = sb.hardbin_id)'
  ;

var hbinBasis =
  'SELECT'
  + '     tr.tp_rev_id'
  + '   , hb.hardbin_id'
  + '   , hb.hbin_num'
  + '   , hb.step_output_id'
  + '   , hb.name'
  + '   , hb.good_bin'
  + '   , hb.hold_min_percent'
  + '   , hb.hold_max_percent'
  + '   , pt.part_id'
  + '   , pt.part_number'
  + ' FROM'
  + '   tp_revs                tr'
  + '   JOIN hardbins          hb  ON (hb.tp_rev_id = tr.tp_rev_id)'
  + '   LEFT JOIN step_outputs so  ON (so.step_output_id = hb.step_output_id)'
  + '   LEFT JOIN parts        pt  ON (pt.part_id = so.part_id)'
  ;

//============================================================================//

module.exports = function(PEODB) {

  var requiredArgs = [
    'tp_rev_id',
  ];

  PEODB.prototype.getTPrevBins = function(args, cb) {
    var peodb = this;

    if (!(args instanceof Object)) {
      args = { tp_rev_id: args };
    }

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }

    var db = peodb.sharedDB;
    var tp_rev_id = db.escape(args.tp_rev_id);

    var qStr = hbinBasis + ' WHERE hb.tp_rev_id = ' + tp_rev_id;
    db.queryData(qStr, function(err, hardbins) {
      if (err) { return cb(err); }

      var qStr = sbinBasis + ' WHERE sb.tp_rev_id = ' + tp_rev_id;
      db.queryData(qStr, function(err, softbins) {
        if (err) { return cb(err); }

        return cb(null, {
          hardbins: hardbins,
          softbins: softbins,
        });
      });
    });
  }

  //==========================================================================//

  PEODB.prototype.getTPrevSoftbins = function(args, cb) {
    var peodb = this;

    if (!(args instanceof Object)) {
      args = { tp_rev_id: args };
    }

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }

    var db = peodb.sharedDB;
    var qStr = sbinBasis + ' WHERE sb.tp_rev_id = ' + db.escape(args.tp_rev_id);
    db.queryData(qStr, cb);
  }

  //==========================================================================//

  PEODB.prototype.getTPrevHardbins = function(args, cb) {
    var peodb = this;

    if (!(args instanceof Object)) {
      args = { tp_rev_id: args };
    }

    var missingArg = peodb.checkArgs(requiredArgs, args);
    if (missingArg) {
      return cb(Error('missing required argument: ' + missingArg));
    }

    var db = peodb.sharedDB;
    var qStr = hbinBasis + ' WHERE hb.tp_rev_id = ' + db.escape(args.tp_rev_id);
    db.queryData(qStr, cb);
  }
}

//============================================================================//

