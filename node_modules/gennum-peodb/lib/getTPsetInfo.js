//============================================================================//

var print = console.log;

//============================================================================//

var queryBasis =
  'SELECT'
  + '     ts.tp_set_id       AS tp_set_id'
  + '   , s.step_id          AS step_id'
  + '   , o.object_id        AS object_id'
  + '   , ts.name            AS name'
  + '   , ts.create_time     AS create_time'
  + '   , ts.create_user_id  AS create_user_id'
  + '   , ts.product_code    AS product_code'
  // partflow
  + '   , ts.partflow_id     AS partflow_id'
  + '   , pf.name            AS partflow_name'
  + '   , pf.description     AS partflow_desc'
  + '   , pf.root_part_id    AS partflow_root_part_id'
  // tp_stage
  + '   , ts.tp_stage_id     AS tp_stage_id'
  + '   , st.stage           AS tp_stage_type'
  + '   , st.stage_num       AS tp_stage_num'
  + '   , st.abbr            AS tp_stage_abbr'
  + '   , st.description     AS tp_stage_desc'
  // user
  + '   , us.name            AS user_name'

  + ' FROM'
  + '   tp_sets         ts'
  + '   JOIN steps      s   ON (s.step_id      = ts.step_id)'
  + '   JOIN objects    o   ON (o.object_id    = s.object_id)'
  + '   JOIN partflows  pf  ON (pf.partflow_id = ts.partflow_id)'
  + '   JOIN tp_stages  st  ON (st.tp_stage_id = ts.tp_stage_id)'
  + '   JOIN users      us  ON (us.user_id     = ts.create_user_id)'
  ;

module.exports = function(PEODB) {

  var requiredArgs = [ // either
    //'name',
    //'tp_set_id',
  ];

  PEODB.prototype.getTPsetInfo = function(args, cb) {
    var peodb = this;

    if (!(args instanceof Object)) {
      args = { tp_set_id: args };
    }

    if (!args.tp_set_id && !args.name) {
      return cb(
        Error('missing required argument: name or tp_set_id')
      );
    }
    if (args.tp_set_id && args.name) {
      return cb(
        Error('missing required argument: name or tp_set_id, not both')
      );
    }

    getTPsetInfo(peodb.sharedDB, args, cb);
  }

  function getTPsetInfo(db, args, cb) {
    var qStr = queryBasis;
    if (args.name) {
      qStr += ' WHERE ts.name = ' + db.escape(args.name)
    }
    if (args.tp_set_id) {
      qStr += ' WHERE ts.tp_set_id = ' + db.escape(args.tp_set_id)
    }
    db.queryData(qStr, function(err, data) {
      if (err) {
        return cb(err);
      }
      if (data.rows.length <= 0) {
        return cb(Error('no matching test program sets'));
      }
      if (data.rows.length >= 2) {
        return cb(Error('too many matching test program sets'));
      }
      return cb(null, data.rows[0].toMap());
    });
  }
}

//============================================================================//
