#!/usr/bin/env node

try {
  require('console.log');
} catch (e) {
}

var print = console.log;

var gennum_ldap = require('gennum-ldap');

function getUserName(cb) {
  var username;
  process.stdout.write('username: ');
  process.stdin.resume();
  process.stdin.on('data', stdinData);
  function stdinData(data) {
    data = data.toString().replace(/\n.*$/, '');
    if (data.length < 1) {
      process.stdout.write('username: ');
    } else {
      process.stdin.removeListener('on', stdinData);
      process.stdin.pause();
      cb(data);
    }
  }
}

// employees = [
//   { dn: ..., manager: ..., title: ... },
//   { dn: ..., manager: ..., title: ... },
//   { dn: ..., manager: ..., title: ... },
// ];

var attrbs = [
  'manager',
  'title',
  'name',
];

function findManager(employees, cb) {
  var last = employees[employees.length - 1];
  var managerDN = last.manager;
  if (!managerDN) {
    return cb(null, employees);
  }
  gennum_ldap.getUserInfoByDN(managerDN, attrbs, function(err, data) {
    if (err) {
      return cb(err, employees);
    }
    employees.push(data);
    return findManager(employees, cb);
  })
}

function traceUser(username) {
  gennum_ldap.getUserInfoByFullname(username, attrbs, function(err, data) {
    if (err) {
      return print(err);
    }
    var employees = [ data ];
    findManager(employees, function(err, data) {
      if (err) {
        print(err, data);
      }
      else {
        print();
        for (var i = data.length - 1; i >= 0; i--) {
          var employee = data[i];
          var name = employee.name;
          var nameLen = name.length;
          for (var c = 0; c < (24 - nameLen); c++) {
            name += ' ';
          }
          print(name + ' (' + employee.title + ')');
        }
        print();
      }
    });
  });
}

traceUser(process.argv[2]);

