
.PHONY: all load print pdf

#
#  NOTE: the `engine.def` file is used to setup the default table engine
#

#
#  Order matters!
#
SQLS =           \
  config.sql     \
  docs.sql       \
  objects.sql    \
  users.sql      \
  companies.sql  \
  ates.sql       \
  blobs.sql      \
  parts.sql      \
  probers.sql    \
  steps.sql      \
  partflows.sql  \
  tps.sql        \
  bins.sql       \
  datalogs.sql   \
  testflags.sql  \
  testtimes.sql  \
  roles.sql      \
  signoffs.sql   \
  audits.sql     \
  loadboards.sql \
  planning.sql   \
  ydb.sql        \
  emails.sql     \
  comments.sql   \
  urlviews.sql   \
  mutexes.sql    \
  changelog.sql  \
  INITIAL_DATA.sql

all:	load

# FIXME - innodb_autoinc_lock_mode = 0  (for sequential AUTO_INCREMENTS)

load:
	@set -e; \
	\
	APP_MODE=`node -e "\
	  var peoConf = require('/etc/peo/config');\
	  process.stdout.write(peoConf.getAppMode());\
	"`; \
	DB=`node -e "\
	  var peoConf = require('/etc/peo/config');\
	  var appMode = peoConf.getAppMode();\
	  process.stdout.write(peoConf.getPEODBConfig('peo', appMode).database);\
	"`; \
	echo "APP_MODE = $$APP_MODE, SCHEMA = $$DB"; \
	\
	if [ "$$APP_MODE" = "production" ]; then \
	  echo; \
	  echo; \
	  KEY=`echo "console.log(Math.floor(Math.random() * 1e6))" | node`; \
	  echo "You are messing with the production database."; \
	  echo "Are you REALLY REALLY sure that you want to do that?"; \
	  echo "(enter '$$KEY' to proceed)"; \
	  echo; \
	  read ANSWER; \
	  if [ x"$$ANSWER" != x"$$KEY" ]; then \
	    echo; \
	    echo "Smart move, bailing."; \
	    echo; \
	    exit 1; \
	  fi; \
	fi; \
	\
	GIT_VERSION=`git describe --tags --dirty`; \
	\
	echo "Using database $$DB  ($$GIT_VERSION)."; \
	\
	echo "DROP   DATABASE IF EXISTS $$DB; \
              CREATE DATABASE $$DB \
                DEFAULT CHARACTER SET latin1 \
                DEFAULT COLLATE latin1_bin" | \
              /etc/peo/peodb; \
        \
	echo "looping files"; \
	\
	for file in $(SQLS); do \
		if ! (cat engine.def "$$file" | /etc/peo/peodb); then \
		        echo; \
			echo ">>> from $$file <<<"; \
		        echo; \
			exit 1; \
		fi; \
	done; \
	echo "INSERT INTO config(\`key\`,\`value\`) \
	      VALUES ('git_version', '$$GIT_VERSION')" | \
	     /etc/peo/peodb; \
	\
	echo "The PEO schema has been (re)created."

print:
	a2ps $(SQLS)

pdf:
	a2ps -o - $(SQLS) | ps2pdf - prudb.pdf
