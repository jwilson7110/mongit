################################################################################
#
#  PRU Schema - Part Flow and Information tables
#
################################################################################
#
#  Part Information
#

CREATE TABLE `part_types` ( -- LIST-TABLE
  `part_type_id`        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, `abbr`                VARCHAR(4)
, `primary_type`        VARCHAR(16)
, UNIQUE KEY (`name`)
);

INSERT INTO dbdoc(`table_name`, `field_name`, `description`) VALUES
  ("part_types", NULL,           "part types; wafer, dies, chips, etc...")
, ("part_types", "part_type_id", "primary key")
, ("part_types", "name",         "part type name, ex: wafer, die, package, etc...")
;


CREATE TABLE `part_families` ( -- LIST-TABLE -- FIXME -- not used yet
  `part_family_id`      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, UNIQUE KEY (`name`)
);

INSERT INTO dbdoc(`table_name`, `field_name`, `description`) VALUES
  ("part_families", NULL,             "part families")
, ("part_families", "part_family_id", "primary key")
, ("part_families", "name",           "part family name")
;


################################################################################
#
#  Parts
#

CREATE TABLE `parts` (
  `part_id`             INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `object_id`           INT UNSIGNED NOT NULL
, `part_type_id`        INT UNSIGNED NOT NULL
, `part_family_id`      INT UNSIGNED -- FIXME - NOT NULL - not used
, `part_number`         VARCHAR(32)  -- allow NULL for packages
, `sap_type`            VARCHAR(16)  -- allow NULL for packages
, `description`         TEXT         NOT NULL
, `virtual`             BOOLEAN      NOT NULL DEFAULT FALSE
, `state`               ENUM('ACTIVE', 'OBSOLETE') NOT NULL
, UNIQUE  KEY (`part_number`)
, FOREIGN KEY (`object_id`)      REFERENCES `objects`       (`object_id`)
, FOREIGN KEY (`part_type_id`)   REFERENCES `part_types`    (`part_type_id`)
, FOREIGN KEY (`part_family_id`) REFERENCES `part_families` (`part_family_id`)
);


################################################################################
#
#  List for part characteristics
#

CREATE TABLE `bump_types` ( -- LIST-TABLE
  `bump_type_id`        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, UNIQUE KEY (`name`)
);


CREATE TABLE `bump_pitches` ( -- LIST-TABLE
  `bump_pitch_id`       INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, UNIQUE KEY (`name`)
);


CREATE TABLE `wafer_sizes` ( -- LIST-TABLE
  `wafer_size_id`       INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, UNIQUE KEY (`name`)
);

# FIXME - need a fab_material table?
CREATE TABLE `fab_processes` ( -- LIST-TABLE
  `fab_process_id`      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `object_id`           INT UNSIGNED NOT NULL
, `company_id`          INT UNSIGNED NOT NULL
, `name`                VARCHAR(255) NOT NULL
, `brief`               VARCHAR(64)  NOT NULL
, `material`            VARCHAR(255) NOT NULL
, `baseline_d0`         FLOAT
, `complexity_factor`   FLOAT
, UNIQUE KEY (`name`)
, FOREIGN KEY (`object_id`)  REFERENCES `objects`   (`object_id`)
, FOREIGN KEY (`company_id`) REFERENCES `foundries` (`company_id`)
);

################################################################################

CREATE TABLE `part_wafers` (
  `part_id`             INT UNSIGNED PRIMARY KEY
, `fab_process_id`      INT UNSIGNED
, `wafer_size_id`       INT UNSIGNED
, `bump_type_id`        INT UNSIGNED
, `bump_pitch_id`       INT UNSIGNED
, `is_pizza`		BOOLEAN NOT NULL -- FIXME -- MPW (multi product wafer)
, FOREIGN KEY (`part_id`)         REFERENCES `parts`         (`part_id`)
, FOREIGN KEY (`fab_process_id`)  REFERENCES `fab_processes` (`fab_process_id`)
, FOREIGN KEY (`wafer_size_id`)   REFERENCES `wafer_sizes`   (`wafer_size_id`)
, FOREIGN KEY (`bump_type_id`)    REFERENCES `bump_types`    (`bump_type_id`)
, FOREIGN KEY (`bump_pitch_id`)   REFERENCES `bump_pitches`  (`bump_pitch_id`)
);

CREATE TABLE `part_dies` (
  `part_id`             INT UNSIGNED PRIMARY KEY
, `wafer_part_id`       INT UNSIGNED -- convenience linkage
, `gross_die_per_wafer` INT UNSIGNED NOT NULL
, `gross_is_guess`      BOOLEAN      NOT NULL
, `baseline_d0`         FLOAT
# die geometry, primarily for the PacMap tool (all lengths in um)
, `die_size_x`          FLOAT -- the size of the die, X axis
, `die_size_y`          FLOAT -- the size of the die, Y axis
, `scribe_size_x`       FLOAT -- the size of the scribe line, X axis
, `scribe_size_y`       FLOAT -- the size of the scribe line, Y axis
, `reticle_count_x`     INT UNSIGNED -- number of reticles, X axis
, `reticle_count_y`     INT UNSIGNED -- number of reticles, Y axis
, `reticle_die_count_x` INT UNSIGNED -- number of die in a reticle, X axis
, `reticle_die_count_y` INT UNSIGNED -- number of die in a reticle, Y axis
, `array_offset_x`      FLOAT -- reticle map vs. wafer center offset, X axis
, `array_offset_y`      FLOAT -- reticle map vs. wafer center offset, Y axis
, `coord_offset_x`      INT   -- foundry to probe index shift along the X axis
, `coord_offset_y`      INT   -- foundry to probe index shift along the Y axis
, `notch_degrees`       FLOAT
# wafer map information
, `wem_blob_id`         INT UNSIGNED -- wafer exclusion map
, `aoi_flag`            BOOLEAN      -- automated optical inspection
, `bump_flag`           BOOLEAN      -- expects a bump wafer map
, `pkg_exclusion_mm`    FLOAT        -- packaging edge exclusion distance
# foundry information
, `foundry_part_number` VARCHAR(255) -- the foundry's part number
, `foundry_map_blob_id` INT UNSIGNED -- foundry raw wafer map
, `foundry_img_blob_id` INT UNSIGNED -- foundry wafer map image (PNG)
, FOREIGN KEY (`part_id`)             REFERENCES `parts` (`part_id`)
, FOREIGN KEY (`wafer_part_id`)       REFERENCES `parts` (`part_id`)
, FOREIGN KEY (`wem_blob_id`)         REFERENCES `blobs` (`blob_id`)
, FOREIGN KEY (`foundry_map_blob_id`) REFERENCES `blobs` (`blob_id`)
, FOREIGN KEY (`foundry_img_blob_id`) REFERENCES `blobs` (`blob_id`)
);

CREATE TABLE `part_dies_bump_houses` ( -- TIE-TABLE
  `part_id`             INT UNSIGNED NOT NULL
, `bump_house_id`       INT UNSIGNED NOT NULL
, PRIMARY KEY (`part_id`, `bump_house_id`)
, FOREIGN KEY (`part_id`)       REFERENCES `parts`       (`part_id`)
, FOREIGN KEY (`bump_house_id`) REFERENCES `bump_houses` (`company_id`)
);

################################################################################
#
#  Packages do not have SAP part numbers
#

CREATE TABLE `package_types` ( -- LIST-TABLE
  `package_type_id`     INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, UNIQUE KEY (`name`)
);


CREATE TABLE `ball_types` ( -- LIST-TABLE
  `ball_type_id`        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, UNIQUE KEY (`name`)
);


CREATE TABLE `ball_pitches` ( -- LIST-TABLE
  `ball_pitch_id`       INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `name`                VARCHAR(255) NOT NULL
, UNIQUE KEY (`name`)
);


CREATE TABLE `part_packages` (
  -- FIXME - case materials?
  `part_id`             INT UNSIGNED PRIMARY KEY
, `package_type_id`     INT UNSIGNED
, `ball_pitch_id`       INT UNSIGNED
, `ball_type_id`        INT UNSIGNED
, `package_size`        VARCHAR(16) -- FIXME - required?
, `substrate_version`   VARCHAR(16)
, `pms_gendoc_num`      VARCHAR(16) -- FIXME - required? (and when?)
, `pin_count`           INT UNSIGNED
, FOREIGN KEY (`part_id`)         REFERENCES `parts`         (`part_id`)
, FOREIGN KEY (`package_type_id`) REFERENCES `package_types` (`package_type_id`)
, FOREIGN KEY (`ball_pitch_id`)   REFERENCES `ball_pitches`  (`ball_pitch_id`)
, FOREIGN KEY (`ball_type_id`)    REFERENCES `ball_types`    (`ball_type_id`)
);

################################################################################
