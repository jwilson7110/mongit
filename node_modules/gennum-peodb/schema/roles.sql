################################################################################
#
#  Roles
#

CREATE TABLE `role_types` ( -- LIST-TABLE
  `role_type_id`        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `brief`               VARCHAR(16)  NOT NULL
, `description`         TEXT         NOT NULL
, `key_role`            BOOLEAN      NOT NULL
, `single_role`         BOOLEAN      NOT NULL
, `display_order`       FLOAT        NOT NULL
);
INSERT INTO dbdoc(`table_name`, `field_name`, `description`) VALUES
  ("role_types", NULL,            "user role types")
, ("role_types", "role_type_id",  "primary key")
, ("role_types", "brief",         "brief role description")
, ("role_types", "description",   "role description")
, ("role_types", "key_role",      "a user can only have one key role (per object)")
, ("role_types", "single_role",   "only one user can have this role (per object)")
, ("role_types", "display_order", "sorting order for displaying roles")
;

CREATE TABLE `role_controls` ( -- TIE-TABLE
  `master_role_type_id` INT UNSIGNED NOT NULL
, `slave_role_type_id`  INT UNSIGNED NOT NULL
, PRIMARY KEY (`master_role_type_id`, `slave_role_type_id`)
, FOREIGN KEY (`master_role_type_id`) REFERENCES `role_types` (`role_type_id`)
, FOREIGN KEY (`slave_role_type_id`)  REFERENCES `role_types` (`role_type_id`)
);
INSERT INTO dbdoc(`table_name`, `field_name`, `description`) VALUES
  ("role_controls", NULL, "role assignment privilege map")
, ("role_controls", "master_role_type_id", "the master role (ex: TE_mgr)")
, ("role_controls", "slave_role_type_id",  "the slave role (ex: TE)")
;

################################################################################
#
#  The default role type given to each PEO user
#

CREATE TABLE `user_role_types` ( -- TIE-TABLE
  `user_id`             INT SIGNED   NOT NULL
, `role_type_id`        INT UNSIGNED NOT NULL
, PRIMARY KEY (`user_id`, `role_type_id`) -- one role per user?
, FOREIGN KEY (`user_id`)      REFERENCES `users`      (`user_id`)
, FOREIGN KEY (`role_type_id`) REFERENCES `role_types` (`role_type_id`)
);

################################################################################

CREATE TABLE `object_roles` (
  `object_id`           INT UNSIGNED NOT NULL
, `user_id`             INT SIGNED   NOT NULL
, `role_type_id`        INT UNSIGNED NOT NULL
, PRIMARY KEY (`object_id`, `user_id`, `role_type_id`)
, FOREIGN KEY (`object_id`)    REFERENCES `objects`    (`object_id`)
, FOREIGN KEY (`user_id`)      REFERENCES `users`      (`user_id`)
, FOREIGN KEY (`role_type_id`) REFERENCES `role_types` (`role_type_id`)
);

################################################################################

CREATE TABLE `role_changesets` (
  `role_changeset_id`   INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `change_time`         DOUBLE       NOT NULL -- TIME_T
, `change_type`         ENUM('EDIT','COPY') NOT NULL
, `action`              ENUM('SET','INSERT','DELETE')
, `assigner_id`         INT   SIGNED
, `target_user_id`      INT   SIGNED
, `object_id`           INT UNSIGNED
, `role_type_id`        INT UNSIGNED
, `src_object_id`       INT UNSIGNED
, `dst_object_id`       INT UNSIGNED
, `queued_emails`       BOOLEAN      NOT NULL DEFAULT FALSE
, FOREIGN KEY (`assigner_id`)    REFERENCES `users`      (`user_id`)
, FOREIGN KEY (`target_user_id`) REFERENCES `users`      (`user_id`)
, FOREIGN KEY (`object_id`)      REFERENCES `objects`    (`object_id`)
, FOREIGN KEY (`role_type_id`)   REFERENCES `role_types` (`role_type_id`)
, FOREIGN KEY (`src_object_id`)  REFERENCES `objects`    (`object_id`)
, FOREIGN KEY (`dst_object_id`)  REFERENCES `objects`    (`object_id`)
);

CREATE TABLE `role_changes` (
  `role_change_id`      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `role_changeset_id`   INT UNSIGNED NOT NULL
, `action`              ENUM('INSERTED','DELETED') NOT NULL
, `object_id`           INT UNSIGNED NOT NULL
, `user_id`             INT   SIGNED NOT NULL
, `role_type_id`        INT UNSIGNED NOT NULL
, UNIQUE  KEY (`role_changeset_id`
              , `action`
              , `object_id`
              , `user_id`
              , `role_type_id`)
, FOREIGN KEY (`role_changeset_id`) REFERENCES `role_changesets` (`role_changeset_id`)
, FOREIGN KEY (`object_id`)         REFERENCES `objects`         (`object_id`)
, FOREIGN KEY (`user_id`)           REFERENCES `users`           (`user_id`)
, FOREIGN KEY (`role_type_id`)      REFERENCES `role_types`      (`role_type_id`)
);

CREATE TABLE `role_emails` (
  `role_changeset_id`   INT UNSIGNED NOT NULL
, `recipient_id`        INT   SIGNED NOT NULL
, `attempts`            INT UNSIGNED NOT NULL DEFAULT 0
, `delivered`           BOOLEAN      NOT NULL DEFAULT FALSE
, PRIMARY KEY (`role_changeset_id`, `recipient_id`)
, FOREIGN KEY (`role_changeset_id`) REFERENCES `role_changesets` (`role_changeset_id`)
, FOREIGN KEY (`recipient_id`)      REFERENCES `users`           (`user_id`)
);

CREATE TABLE `role_email_objects` (
  `role_changeset_id`   INT UNSIGNED NOT NULL
, `recipient_id`        INT   SIGNED NOT NULL
, `object_id`           INT UNSIGNED NOT NULL
, PRIMARY KEY (`role_changeset_id`, `recipient_id`, `object_id`)
, FOREIGN KEY (`role_changeset_id`) REFERENCES `role_changesets` (`role_changeset_id`)
, FOREIGN KEY (`recipient_id`)      REFERENCES `users`           (`user_id`)
, FOREIGN KEY (`object_id`)         REFERENCES `objects`         (`object_id`)
);

################################################################################
