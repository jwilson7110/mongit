################################################################################
#
#  Part flow  (steps)
#

CREATE TABLE `step_types` ( -- LIST-TABLE
  `step_type_id`        INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `step_abbr`           VARCHAR(2)
, `step_name`           VARCHAR(255)
, UNIQUE KEY (`step_abbr`)
, UNIQUE KEY (`step_name`)
);

CREATE TABLE `steps` (
  `step_id`             INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `object_id`           INT UNSIGNED NOT NULL
, `step_type_id`        INT UNSIGNED NOT NULL
, `state`               ENUM('ACTIVE', 'MANUAL', 'OBSOLETE') NOT NULL
, FOREIGN KEY (`object_id`)    REFERENCES `objects`    (`object_id`)
, FOREIGN KEY (`step_type_id`) REFERENCES `step_types` (`step_type_id`)
);

CREATE TABLE `part_outputs` (
  `part_output_id`      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `step_id`             INT UNSIGNED NOT NULL
, `part_id`             INT UNSIGNED NOT NULL
, `count`               INT UNSIGNED NOT NULL DEFAULT 1 -- ex: assembly, (MCM using 4 same die)
, `state`               ENUM('ACTIVE', 'MANUAL', 'OBSOLETE') NOT NULL
, UNIQUE  KEY (`step_id`, `part_id`)
, FOREIGN KEY (`step_id`) REFERENCES `steps` (`step_id`)
, FOREIGN KEY (`part_id`) REFERENCES `parts` (`part_id`)
);

CREATE TABLE `step_outputs` (
  `step_output_id`      INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `step_id`             INT UNSIGNED NOT NULL
, `part_id`             INT UNSIGNED NOT NULL
, `count`               INT UNSIGNED NOT NULL DEFAULT 1 -- ex: dicing, GDPW
, `state`               ENUM('ACTIVE', 'MANUAL', 'OBSOLETE') NOT NULL
, UNIQUE  KEY (`step_id`, `part_id`)
, FOREIGN KEY (`step_id`) REFERENCES `steps` (`step_id`)
, FOREIGN KEY (`part_id`) REFERENCES `parts` (`part_id`)
);

################################################################################

CREATE TABLE `step_sets` ( -- FIXME - unused  (for grouping "virtual die" steps)
  `step_set_id`         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE `step_set_steps` ( -- TIE-TABLE
  `step_id`             INT UNSIGNED NOT NULL
, `step_set_id`         INT UNSIGNED NOT NULL
, PRIMARY KEY (`step_id`, `step_set_id`)
, FOREIGN KEY (`step_id`)     REFERENCES `steps`     (`step_id`)
, FOREIGN KEY (`step_set_id`) REFERENCES `step_sets` (`step_set_id`)
);


################################################################################

CREATE TABLE `step_companies` ( -- TIE-TABLE
  `step_id`             INT UNSIGNED NOT NULL
, `company_id`          INT UNSIGNED NOT NULL
, PRIMARY KEY (`step_id`, `company_id`)
, FOREIGN KEY (`step_id`)    REFERENCES `steps`     (`step_id`)
, FOREIGN KEY (`company_id`) REFERENCES `companies` (`company_id`)
);

CREATE TABLE `step_contacts` ( -- TIE-TABLE
  `step_id`             INT UNSIGNED NOT NULL
, `contact_id`          INT UNSIGNED NOT NULL
, PRIMARY KEY (`step_id`, `contact_id`)
, FOREIGN KEY (`step_id`)    REFERENCES `steps`    (`step_id`)
, FOREIGN KEY (`contact_id`) REFERENCES `contacts` (`contact_id`)
);

################################################################################
