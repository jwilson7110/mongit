################################################################################
#
#  PRU Schema  (Test Program Release Utility)
#
################################################################################
#
#  This file include the tables for:
#  - tp_types
#  - tp_stages
#  - tp_sets
#  - tps
#  - tp_revs


CREATE TABLE `tp_types` ( -- LIST-TABLE
  `tp_type_id`          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `abbr`                CHAR         NOT NULL -- P / Q / D / E / etc...
, `description`         TEXT         NOT NULL
, `req_trial_run`       BOOLEAN      NOT NULL -- requires an external trial run
, UNIQUE KEY (`abbr`)
);

CREATE TABLE `tp_stages` ( -- LIST-TABLE
  `tp_stage_id`         INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `stage`               CHAR         NOT NULL     -- ['W', 'F', 'S']
, `stage_num`           TINYINT UNSIGNED NOT NULL -- [1 - 9]
, `abbr`                VARCHAR(2)   NOT NULL     -- ['W1', 'F3', 'S2']
, `description`         TEXT         NOT NULL
, UNIQUE KEY (`stage`, `stage_num`)
, UNIQUE KEY (`abbr`)
);

################################################################################
#
#  Test Program Sets
#
#    All test programs belonging to the same stage that produce the same outputs
#    (ex: GN2010D_A1K0_F1*)
#

CREATE TABLE `tp_sets` (
  `tp_set_id`           INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `partflow_id`         INT UNSIGNED NOT NULL
, `tp_stage_id`         INT UNSIGNED NOT NULL
, `step_id`             INT UNSIGNED NOT NULL
, `name`                VARCHAR(255) NOT NULL
, `product_code`        VARCHAR(255) NOT NULL -- the leading part of TP names
, `create_user_id`      INT   SIGNED NOT NULL
, `create_time`         DOUBLE       NOT NULL -- TIME_T
, `comments`            TEXT
, UNIQUE  KEY (`name`)
, FOREIGN KEY (`partflow_id`)    REFERENCES `partflows` (`partflow_id`)
, FOREIGN KEY (`tp_stage_id`)    REFERENCES `tp_stages` (`tp_stage_id`)
, FOREIGN KEY (`step_id`)        REFERENCES `steps`     (`step_id`)
, FOREIGN KEY (`create_user_id`) REFERENCES `users`     (`user_id`)
);

INSERT INTO dbdoc(`table_name`, `field_name`, `description`) VALUES
  ("tp_sets", NULL,       "test program set - all tps with same stage and outputs")
, ("tp_sets", "name",     "test program set name, ex: GN2010D_A1K0_F1")
;


################################################################################
#
#  Test Programs
#
#    example: GN2010D_A1K0_F1PP_rev*
#

CREATE TABLE `tps` (
  `tp_id`               INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `tp_set_id`           INT UNSIGNED NOT NULL
, `step_id`             INT UNSIGNED NOT NULL
, `tp_type_id`          INT UNSIGNED NOT NULL
, `ate_type_id`         INT UNSIGNED NOT NULL
, `part_id`             INT UNSIGNED -- for the 'part_number' linkage
, `name`                VARCHAR(255) NOT NULL
, `create_user_id`      INT   SIGNED NOT NULL
, `create_time`         DOUBLE       NOT NULL -- TIME_T
, `comments`            TEXT
, UNIQUE  KEY (`name`)
, FOREIGN KEY (`tp_set_id`)      REFERENCES `tp_sets`   (`tp_set_id`)
, FOREIGN KEY (`part_id`)        REFERENCES `parts`     (`part_id`)
, FOREIGN KEY (`step_id`)        REFERENCES `steps`     (`step_id`)
, FOREIGN KEY (`tp_type_id`)     REFERENCES `tp_types`  (`tp_type_id`)
, FOREIGN KEY (`ate_type_id`)    REFERENCES `ate_types` (`ate_type_id`)
, FOREIGN KEY (`create_user_id`) REFERENCES `users`     (`user_id`)
);

INSERT INTO dbdoc(`table_name`, `field_name`, `description`) VALUES
  ("tps", NULL,       "test programs - ex: GN2010D_A1K0_F1PP_rev*")
, ("tps", "name",     "test program name")
;

################################################################################
#
#  Test Program Revisions
#

CREATE TABLE `tp_rev_states` ( -- LIST-TABLE
  `name`                VARCHAR(16) NOT NULL PRIMARY KEY
, `description`         TEXT        NOT NULL
, `terminal`            BOOLEAN     NOT NULL
, `automated`           BOOLEAN     NOT NULL
, `display_order`       FLOAT       NOT NULL
);

CREATE TABLE `tp_revs` (
  `tp_rev_id`           INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `tp_id`               INT UNSIGNED NOT NULL
, `step_id`             INT UNSIGNED NOT NULL
, `name`                VARCHAR(128) NOT NULL -- ex: GN2412_A1W0_F1PP_rev030_RC01
, `rev`                 VARCHAR(16)  NOT NULL -- ex: 030  (revision)
, `rc`                  VARCHAR(8)            -- ex:  01  (Release Candidate)
, `create_user_id`      INT   SIGNED NOT NULL
, `create_time`         DOUBLE       NOT NULL -- TIME_T
, `create_app_ver`      VARCHAR(32)
, `create_schema_ver`   VARCHAR(32)
, `state`               VARCHAR(16)  NOT NULL DEFAULT 'DRAFT'
, `is_rel_rev`          BOOLEAN      NOT NULL DEFAULT FALSE -- is release revision
, `rc_tp_rev_id`        INT UNSIGNED -- release candidate predecessor
, `trial_run_required`  BOOLEAN      NOT NULL DEFAULT TRUE
, `svn_url`             VARCHAR(255) NOT NULL
, `svn_rev`             VARCHAR(16)
, `archive_name`        VARCHAR(255) -- including the extension
, `archive_size`        BIGINT UNSIGNED -- in bytes
, `archive_crc`         VARCHAR(128) -- ex: for .tgz files =>  `gzip -v -l`
, `archive_sha256dir`   VARCHAR(255) -- sha256 hash of file hierarchy and contents
, `ate_sw_version_id`   INT UNSIGNED -- ATE software version
, `ate_os_version_id`   INT UNSIGNED -- ATE operating system version
, `site_count`          INT UNSIGNED -- number of sites on the loadboard
, `vector_size`         BIGINT UNSIGNED -- vector size (bytes in memory)
, `disk_space`          BIGINT UNSIGNED -- disk space  (uncompressed bytes on the hard drive)
, `reason`              TEXT  -- reason for release
, `comments`            TEXT  -- release comments
, `special_hw`          TEXT  -- special hardware
, `special_instrs`      TEXT  -- special instructions
, `temperature`         FLOAT -- in degrees (Celcius)
, `avg_test_time`       FLOAT -- average test time
, `wafer_exclusion_mm`  FLOAT -- wafer test exclusion distance for PacMap
, `task_handle`         TEXT -- example: 1234@peo1
, `task_error`          TEXT -- example: SFTP server is down
, `task_time`           DOUBLE -- TIME_T
, UNIQUE  KEY (`name`)
, FOREIGN KEY (`tp_id`)              REFERENCES `tps`     (`tp_id`)
, FOREIGN KEY (`step_id`)            REFERENCES `steps`   (`step_id`)
, FOREIGN KEY (`rc_tp_rev_id`)       REFERENCES `tp_revs` (`tp_rev_id`)
, FOREIGN KEY (`create_user_id`)     REFERENCES `users`   (`user_id`)
, FOREIGN KEY (`state`)              REFERENCES `tp_rev_states`   (`name`)
, FOREIGN KEY (`ate_os_version_id`)  REFERENCES `ate_os_versions` (`ate_os_version_id`)
, FOREIGN KEY (`ate_sw_version_id`)  REFERENCES `ate_sw_versions` (`ate_sw_version_id`)
);

INSERT INTO dbdoc(`table_name`, `field_name`, `description`) VALUES
  ("tp_revs", NULL,          "test program revsions")
, ("tp_revs", "tp_rev_id",   "primary key")
, ("tp_revs", "tp_id",       "test program foreign key")
, ("tp_revs", "name",        "test program revision name")
;

################################################################################

CREATE TABLE `tp_rev_state_changes` (
  `tp_rev_state_change_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `tp_rev_id`           INT UNSIGNED NOT NULL
, `change_time`         DOUBLE       NOT NULL -- TIME_T
, `user_id`             INT   SIGNED NOT NULL
, `state_old`           VARCHAR(16)  NOT NULL
, `state_new`           VARCHAR(16)  NOT NULL
, `reason`              TEXT -- reason for the state change
, FOREIGN KEY (`tp_rev_id`) REFERENCES `tp_revs`       (`tp_rev_id`)
, FOREIGN KEY (`user_id`)   REFERENCES `users`         (`user_id`)
, FOREIGN KEY (`state_old`) REFERENCES `tp_rev_states` (`name`)
, FOREIGN KEY (`state_new`) REFERENCES `tp_rev_states` (`name`)
);

################################################################################

CREATE TABLE `tp_rev_task_logs` (
  `tp_rev_task_log_id`  INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `tp_rev_id`           INT UNSIGNED NOT NULL
, `tp_rev_state`        VARCHAR(16)  NOT NULL
, `log_time`            DOUBLE       NOT NULL -- TIME_T
, `log_text`            TEXT         NOT NULL
, `active`              BOOLEAN      NOT NULL DEFAULT TRUE
, FOREIGN KEY (`tp_rev_id`)    REFERENCES `tp_revs`       (`tp_rev_id`)
, FOREIGN KEY (`tp_rev_state`) REFERENCES `tp_rev_states` (`name`)
);

################################################################################

CREATE TABLE `tp_rev_tool_logs` (
  `tp_rev_tool_log_id`   INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
, `tp_stage_id`          INT UNSIGNED NOT NULL
, `tp_type_id`           INT UNSIGNED NOT NULL
, `ate_type_id`          INT UNSIGNED NOT NULL
, `svn_root`             VARCHAR(255) NOT NULL
, `product_code`         VARCHAR(255) NOT NULL
, `parent_product_code`  VARCHAR(255) NOT NULL
, `silicon_revision`     VARCHAR(8)   NOT NULL
, `rev`                  INT          NOT NULL
, `rc`                   INT
, `test_flow_file`       VARCHAR(1000)
, `test_table_file`      VARCHAR(1000)
, `test_number_file`     VARCHAR(1000)
, `test_number_names_file` VARCHAR(1000) -- fully formed unique names file
, `config_file`          VARCHAR(1000)
, `svn_rev_trunk`        INT UNSIGNED
, `svn_rev_branch`       INT UNSIGNED
, `svn_rev_tag`          INT UNSIGNED
, `svn_rev_release`      INT UNSIGNED
, `status`               VARCHAR(16) NOT NULL
, `error`                TEXT
, `is_rel_rev`           BOOLEAN     NOT NULL
, `create_time`          DOUBLE      NOT NULL -- TIME_T
, FOREIGN KEY (`tp_stage_id`) REFERENCES `tp_stages` (`tp_stage_id`)
, FOREIGN KEY (`tp_type_id`)  REFERENCES `tp_types`  (`tp_type_id`)
, FOREIGN KEY (`ate_type_id`) REFERENCES `ate_types` (`ate_type_id`)
);

################################################################################
